shiny::runApp()
?dashboardSidebar
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# dashboardPage(
#     dashboardHeader(title = "Wines !!!"),
#     dashboardSidebar(
#         sidebarMenu(
#             menuItem("Iris", tabName = "iris", icon = icon("tree")),
#             menuItem("Cars", tabName = "cars", icon = icon("car"))
#         )
#     ),
#     dashboardBody(
#
#         tabItems(
#             tabItem("iris",
#                     box(plotOutput("winePlotTypeOfSugar"), width = 8),
#                     box(
#                         selectInput("features", "Features:", c("Sugar", "CitrcAcid")),
#                         width = 4
#                     )),
#             tabItem("cars",box(plotOutput("winePlotTypeOfCitricAcid"), width = 8))
#         )
#
#     )
# )
dashboardPage(
dashboardHeader(title = "Wines !!!"),
dashboardSidebar(
sidebarMenu(
menuItem("Wines", tabName = "wines", icon = icon("wine-bottle", class = "fas fa-wine-bottle")),
menuItem("Red WIne", tabName = "red_wines", icon = icon("wine-bottle", class = "fas fa-wine-bottle")),
menuItem("White Wine", tabName = "white_wines", icon = icon("wine-bottle", class = "fas fa-wine-bottle"))
)
),
dashboardBody(
tabItems(
tabItem("wines",
box(plotOutput("winePlotTypeOfSugar"), width = 8),
box(
selectInput("features", "Features:", c("fixed.acidity", "volatile.acidity", "citric.acid", "residual.sugar", "chlorides", "free.sulfur.dioxide", "total.sulfur.dioxide", "density", "pH", "sulphates", "alcohol", "quality")),
width = 4
),
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 20,
value = 5)
),
# Show a plot of the generated distribution
mainPanel(
# plotOutput("distPlot")
)
)
),
tabItem("red_wines",fluidPage(h1("Red Wines"))),
tabItem("white_wines",fluidPage(h1("Red Wines")))
)
)
)
# # Application title
# titlePanel("Difference between red Wines and White wines"),
#
# # Sidebar with a slider input for number of bins
# sidebarLayout(
#     sidebarPanel(
#         sliderInput("bins",
#                     "Number of bins:",
#                     min = 1,
#                     max = 50,
#                     value = 30)
#     ),
#
#     # Show a plot of the generated distribution
#     mainPanel(
#         plotOutput("distPlot")
#     )
# )
))
runApp()
shiny::runApp()
runApp()
shiny::runApp('C:/Users/PC/Downloads/Telegram Desktop')
runApp()
